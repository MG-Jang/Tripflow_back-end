<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ddabong.tripflow.board.dao.IBoardRepository">
<!--        id가 의미하는 것은 repository에서 "Board.save"-->
<!--        parameterType = "board"가 의미하는 것은 mybatis 에서 "com.codingrecipe.board.dto.BoardDTO 를 board라는 별칭으로 부르겠다-->
    <insert id="save" parameterType="com.ddabong.tripflow.board.dto.BoardDTO">
        insert into board_table(boardTitle, boardWriter, boardPass, boardContents)
        values(#{boardTitle}, #{boardWriter}, #{boardPass}, #{boardContents})
    </insert>

    <select id="findAll" resultType="com.ddabong.tripflow.board.dto.BoardDTO">
        select * from tripflow.DDABONG order by likeid desc
    </select>

    <update id="updateHits" parameterType="long">
        update board_table set boardHits=boardHits+1 where id=#{id}
    </update>

    <select id="findById" parameterType="long" resultType="com.ddabong.tripflow.board.dto.BoardDTO">
        SELECT dd.likeid, dd.postid, dd.memberid, po.travelid, po.content
        FROM tripflow.DDABONG dd
        LEFT JOIN tripflow.POST po ON dd.postid = po.postid

        UNION ALL

        SELECT dd.likeid, dd.postid, dd.memberid, po.travelid, po.content
        FROM tripflow.DDABONG dd
        RIGHT JOIN tripflow.POST po ON dd.postid = po.postid
        WHERE dd.postid IS NULL;
    </select>

    <select id="findLike" resultType="com.ddabong.tripflow.board.dto.BoardDTO">
        select count(*) likecount From tripflow.DDABONG where postid = "1";
    </select>

    <select id="findDetail" resultType="com.ddabong.tripflow.board.dto.BoardDTO">
        select * from tripflow.POST
        where postid = #{id} ;
    </select>

    <select id="findComment" resultType="com.ddabong.tripflow.board.dto.BoardDTO">
        select * from tripflow.COMMENT where postid = #{id}
        order by commentid asc;
    </select>


<!--    제목과 내용만 수정-->
    <update id="update">
        update board_table set boardTitle=#{boardTitle}, boardContents=#{boardContents} where id=#{id}
    </update>

    <delete id="delete" parameterType="long">
        delete from board_table where id=#{id}
    </delete>
</mapper>